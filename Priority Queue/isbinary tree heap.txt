int nodes(Node * root)
 {
     if(root==NULL)
     {
         return 0;
     }
     return 1+nodes(root->left)+nodes(root->right);
 }
 bool completebinarytree(Node *root,int index,int count)
 {
     if(root==NULL)
     {
         return true;
     }
     if(index>=count)
     {
         return false;
     }
     return (completebinarytree(root->left,2*index+1,count)&&completebinarytree(root->right,2*index+2,count));
 }
 bool heap(Node * root)
 {
    if(root==NULL)
    {
        return true;
    }
    
     if(root->left==NULL&&root->right==NULL)
     {
         return true;
     }
     if(root->right==NULL)
     {
         if(root->data>=root->left->data)
         {
             return true;
         }
         else{
             return false;
         }
     }
     else
     {
         if(root->data>=root->right->data&&root->data>=root->left->data)
         {
         return (heap(root->left)&&heap(root->right));
         }
         else{
             return false;
         }
     }
    
 }
 bool isHeap(Node * tree)
{
 // Your code here
 Node * root=tree;
 int index=0;
 int count=nodes(root);
 bool ans=completebinarytree(root,index,count)&&heap(root);    
    
}