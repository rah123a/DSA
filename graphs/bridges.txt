#include<iostream> 
#include<map>
#include<vector>
#include<cmath>
#include<cstring>
#include<climits>
#include<queue>
#include<algorithm>
#define ll long long int
using namespace std;
vector<int> adj[100001];
bool visited[100001]={0};
int dist[100001];
int timer=0;
int in[100001];
int low[10001];
//.................................breadth first search............................................
void dfs(int v,int par){
	visited[v]=1;
	in[v]=low[v]=timer;
	timer++;
	for(int i=0;i<adj[v].size();i++){
		if(adj[v][i]==par){
			continue;
		}
		if(visited[adj[v][i]]==1){
			low[v]=min(low[v],in[adj[v][i]]);
		}
		else{
			dfs(adj[v][i],v);
			if(low[adj[v][i]]>in[v]){
				cout<<adj[v][i]<<" "<<v<<" are bridges"<<endl;
			}
			low[v]=min(low[v],low[adj[v][i]]);
		}
	}
}

int main(){
	
	int n,e,x,y,a,b;
	cin>>n>>e;
	for(int i=1;i<=e;i++){
		cin>>a>>b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	dfs(1,-1);
   
}

