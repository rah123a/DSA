#include<iostream>
#include<map>
#include<vector>
#include<cmath>
#include<cstring>
#include<climits>
#include<algorithm>
#define ll long long int
using namespace std;

vector <int> adj[10001];
bool visited[10001];
void dfs(int s) {
       visited[s] = true;
       
       for(int i = 0;i < adj[s].size();++i)    {
        if(visited[adj[s][i]] == false)
            dfs(adj[s][i]);
        }
    }

    void initialize() {
        for(int i = 0;i <1001;++i)
         visited[i] = false;
    }

    int main() {
        int nodes,q,e ,x, y, connectedComponents = 0;
        cin >> nodes>>e;                      
       // cin >> edges;                       
        for(int i = 0;i <(nodes-1);++i) {
         cin >> x >> y;     
     
         adj[x].push_back(y);                   
         adj[y].push_back(x);                  
        }

        initialize();                          

        for(int i = 1;i <= nodes;++i) {
         if(visited[i] == false) {
             dfs(i);
             connectedComponents++;
         }
        }
        if(connectedComponents==1 && (e=nodes-1)){
        	cout<<"YES"<<endl;
		}
		else{
			cout<<"NO"<<endl;
		}
        return 0;
    }